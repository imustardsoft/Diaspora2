-#   Copyright (c) 2010, Diaspora Inc.  This file is
-#   licensed under the Affero General Public License version 3 or later.  See
-#   the COPYRIGHT file.

.stream_element{:data=>{:guid=>post.id}}
  - if current_user && post.author.owner_id == current_user.id
    .right.controls
      - reshare_aspects = aspects_without_post(all_aspects, post)
      - unless reshare_aspects.empty?
        = render 'shared/reshare', :aspects => reshare_aspects, :post => post
      = link_to image_tag('deletelabel.png'), status_message_path(post), :confirm => t('are_you_sure'), :method => :delete, :remote => true, :class => "delete stream_element_delete", :title => t('delete')
  - else
    .right.controls
      = link_to image_tag('deletelabel.png'), post_visibility_path(:id => "42", :post_id => post.id), :method => :put, :remote => true, :class => "delete stream_element_delete", :title => t('hide')
  .undo_text.hidden
    = t('post_visibilites.update.post_hidden', :name => post.author.name)
    = link_to t('undo'), post_visibility_path(:id => "42", :post_id => post.id), :method => :put, :remote => true, :class => "delete stream_element_delete"
  .sm_body
    = person_image_link(post.author, :size => :thumb_small)

    .content
      .from
        = person_link(post.author, :class => 'author')
        %time.time.timeago{:datetime => post.created_at, :integer => time_for_sort(post).to_i}

      - if post.activity_streams?
        = link_to image_tag(post.image_url), post.object_url
      - else
        = render 'status_messages/status_message', :post => post, :photos => post.photos

      .info
        - if post.public?
          %span.aspect_badges
            %span.aspect_badge.public
              = t('the_world')
        - elsif post.author.owner_id == current_user.id
          %span.aspect_badges
            = aspect_badges(aspects_with_post(all_aspects, post), :link => true)

        %span.timeago
          = link_to(how_long_ago(post), object_path(post))

        %span.via
          - if post.activity_streams?
            = t('.via', :link => link_to("#{post.provider_display_name}", post.actor_url)).html_safe
        
        - unless (defined?(@commenting_disabled) && @commenting_disabled)
          |
          %span.like_action
            = like_action(post, current_user)
          |
          = link_to t('comments.new_comment.comment'), '#', :class => 'focus_comment_textarea'

      .likes
        - if post.likes.count > 0
          = render "likes/likes", :post_id => post.id, :likes => post.likes, :dislikes => post.dislikes, :current_user => current_user

      = render "comments/comments", :post => post, :comments => post.comments, :current_user => current_user, :condensed => true, :commenting_disabled => (defined?(@commenting_disabled) && @commenting_disabled)
